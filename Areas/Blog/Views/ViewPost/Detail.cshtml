@using m01_Start.Components
@model App.Models.Post
@{
     List<Category> categories = ViewBag.categories as List<Category>;
     var category = ViewBag.category as Category;
     var otherPost = ViewBag.otherPost as IQueryable<Post>;

}
<nav style="--bs-breadcrumb-divider: url(&#34;data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='8' height='8'%3E%3Cpath d='M2.5 0L1 1.5 3.5 4 1 6.5 2.5 8l4-4-4-4z' fill='%236c757d'/%3E%3C/svg%3E&#34;);" aria-label="breadcrumb">
  <ol class="breadcrumb">
    <li class="breadcrumb-item"><a href="#">Home</a></li>
    @if( category != null){
     var li = category.ListParent();
     foreach (var item in li){
    <li class="breadcrumb-item active" aria-current="page">
     <a asp-action="Index" asp-controller="Viewpost" asp-route-categorySlug ="@item.Slug">@item.Title</a>
    </li>
          
     }
     <li class="breadcrumb-item active" aria-current="page">
     <a asp-action="Index" asp-controller="Viewpost" asp-route-categorySlug ="@category.Slug">@category.Title</a>
    </li>
    }
  </ol>
</nav>
<div class="detailPost ">
     <h3>@Model.Title</h3>
     <p>@Model.Description</p>
     <p>@Model.DateUpdated</p>
     <p>@Model.Author.UserName</p>
     <hr>
     @Html.Raw(Model.Content)
</div>
<ul class="list-group">
     @foreach (var post in otherPost)
     {
          <li class="list-group-item">
               <a asp-controller="ViewPost" asp-action="Detail" asp-route-postSlug = "@post.Slug">
                    @post.Title
               </a>
          </li>
     }
</ul>
@section Sidebar{
@await Component.InvokeAsync("m01_Start.Components.CategorySidebar", new CategorySidebar(){
Categories = categories,
level = 0,
caregorySlug = category.Slug
})
}